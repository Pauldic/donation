# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-10-23 16:39
from __future__ import unicode_literals

import core.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 20 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=20, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('phone', models.CharField(default=None, max_length=15, null=True, verbose_name='phone number')),
                ('failed_attempts', models.IntegerField(default=0, verbose_name='failed attempts')),
                ('last_password_change', models.DateTimeField(blank=True, default=None, null=True, verbose_name='last password change')),
                ('force_password_change', models.BooleanField(default=False, verbose_name='force password change')),
                ('avatar_url', models.URLField(blank=True, default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
                'db_table': 'core_auth_user',
            },
            managers=[
                ('objects', core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('amount_live', models.DecimalField(decimal_places=12, max_digits=19)),
                ('amount_init', models.DecimalField(decimal_places=12, max_digits=19)),
                ('roi', models.DecimalField(decimal_places=12, default=0, max_digits=19)),
                ('type', models.CharField(choices=[(b'FS', 'Activation'), (b'TP', 'PH'), (b'RC', 'Recommitment'), (b'PF', 'PH Fee'), (b'RF', 'Refund'), (b'BS', 'Bonus'), (b'TG', 'GH'), (b'GP', 'GH Paused'), (b'AD', 'Advert'), (b'SP', 'Referral'), (b'RB', 'Reg Bonus'), (b'GB', 'Sponsor Bonus'), (b'SB', 'Speed Bonus')], default=None, max_length=13)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Paused (Exception)', 'Paused (Exception)'), ('Paused (Recycle)', 'Paused (Recycle)'), ('Processed', 'Processed'), ('Processed Bonus', 'Processed Bonus'), ('Partial', 'Partial'), ('Cancelled', 'Cancelled'), ('Blocked', 'Blocked'), ('Timeout', 'Timeout')], default='Pending', max_length=21)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(blank=True, default=None, null=True)),
                ('next_update', models.DateTimeField(blank=True, default=None, null=True)),
                ('update_counter', models.IntegerField(default=0)),
                ('fulfilled', models.DateTimeField(blank=True, default=None, null=True)),
                ('maturity', models.DateTimeField()),
                ('commitment_maturity', models.DateTimeField()),
                ('balance', models.DecimalField(decimal_places=12, default=0, max_digits=19)),
                ('max', models.DecimalField(decimal_places=12, max_digits=19)),
                ('match_only', models.DecimalField(blank=True, decimal_places=12, default=None, max_digits=19, null=True)),
                ('can_match', models.BooleanField(default=True, verbose_name='Can Match')),
                ('is_bonus', models.BooleanField(default=False, verbose_name='Bonus')),
                ('is_auto_gh', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('can_credit', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('-created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthAudit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(null=True, verbose_name='ip address')),
                ('session_key', models.CharField(blank=True, default=None, max_length=40, null=True, verbose_name='session key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='last date')),
                ('username', models.CharField(max_length=128, verbose_name='username')),
                ('fingerprint', models.CharField(max_length=32, verbose_name='fingerprint')),
                ('auth_backend', models.CharField(choices=[('Password', 'Password'), ('Facebook', 'Facebook'), ('Google', 'Google'), ('Twitter', 'Twitter'), ('Yahoo', 'Yahoo'), ('LinkedIn', 'LinkedIn'), ('Instagram', 'Instagram'), ('Amazon', 'Amazon'), ('Dropbox', 'Dropbox'), ('Github', 'Github'), ('GitLab', 'GitLab'), ('Stackoverflow', 'Stackoverflow')], default='Password', max_length=14, verbose_name='authenticated via')),
                ('auth_status', models.CharField(choices=[('Failed', 'Failed'), ('Successful', 'Successful')], default='Successful', max_length=10, verbose_name='authentication status')),
                ('session_status', models.CharField(choices=[('Active', 'Active'), ('Anonymous', 'Anonymous'), ('Expired', 'Expired'), ('Invalidated', 'Invalidated'), ('Logged Out', 'Logged Out')], default='Anonymous', max_length=12, verbose_name='session status')),
                ('browser', models.CharField(max_length=16, null=True, verbose_name='browser')),
                ('browser_version', models.CharField(max_length=16, null=True, verbose_name='browser version')),
                ('os', models.CharField(max_length=16, null=True, verbose_name='operating system (OS)')),
                ('os_version', models.CharField(max_length=16, null=True, verbose_name='OS version')),
                ('current_resolution', models.CharField(max_length=16, null=True, verbose_name='current resolution')),
                ('available_resolution', models.CharField(max_length=16, null=True, verbose_name='available resolution')),
                ('device', models.CharField(max_length=16, null=True, verbose_name='device')),
                ('language', models.CharField(max_length=16, null=True, verbose_name='language')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'core_auth_audit',
            },
        ),
        migrations.CreateModel(
            name='AuthSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='session key')),
                ('session_data', models.TextField(verbose_name='session data')),
                ('expire_date', models.DateTimeField(db_index=True, verbose_name='expire date')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'core_auth_session',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('code', models.CharField(default=None, max_length=3, unique=True)),
            ],
            options={
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=36)),
                ('name', models.CharField(max_length=128)),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Account')),
                ('branch_name', models.CharField(blank=True, default=None, help_text='<small><i>optional</i></small>', max_length=36, null=True)),
                ('sort_code', models.CharField(blank=True, default=None, help_text='<small><i>optional</i></small>', max_length=36, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('bank', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Bank')),
            ],
            options={
                'ordering': ('number',),
                'db_table': 'core_bank_account',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BankAccountVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('verified', models.DateTimeField(blank=True, default=None, null=True)),
                ('account', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.BankAccount')),
                ('bank', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Bank')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'core_bank_account_verification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CallDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('started', 'started'), ('ringing', 'ringing'), ('answered', 'answered'), ('completed', 'completed'), ('machine', 'machine'), ('timeout', 'timeout'), ('failed', 'failed'), ('rejected', 'rejected'), ('unanswered', 'unanswered'), ('busy', 'busy')], default='started', max_length=20)),
                ('fromm', models.CharField(max_length=11)),
                ('to', models.CharField(max_length=14)),
                ('uuid', models.CharField(max_length=256)),
                ('cuuid', models.CharField(max_length=256)),
                ('network', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'core_call_detail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('Delivered', 'Delivered'), ('Pending', 'Pending'), ('Read', 'Read'), ('Unread', 'Unread')], default='Pending', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChatHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('Started', 'Started'), ('Assigned', 'Assigned'), ('Closed', 'Closed')], default='Started', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'core_chat_head',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChatReceiver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Delivered', 'Delivered'), ('Pending', 'Pending'), ('Read', 'Read'), ('Unread', 'Unread')], default='Pending', max_length=20)),
                ('read_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Chat')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'core_chat_receiver',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChatUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=core.models.path_and_rename_chat_files)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Chat')),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'core_chat_upload',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('label', models.CharField(max_length=40)),
                ('value', models.CharField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'ordering': ('code',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('name_plain', models.CharField(max_length=64)),
                ('is_active', models.BooleanField(default=False)),
                ('dial_code', models.CharField(blank=True, max_length=4, null=True)),
                ('flag', models.CharField(blank=True, max_length=4, null=True)),
                ('capital', models.CharField(blank=True, max_length=64, null=True)),
                ('region', models.CharField(blank=True, max_length=64, null=True)),
                ('region_des', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('symbol', models.CharField(max_length=4)),
                ('name', models.CharField(blank=True, max_length=8, null=True)),
                ('rate', models.DecimalField(decimal_places=12, max_digits=19)),
                ('country', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Country')),
            ],
            options={
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('type', models.CharField(choices=[(b'FS', 'Activation'), (b'TP', 'PH'), (b'RC', 'Recommitment'), (b'PF', 'PH Fee'), (b'RF', 'Refund'), (b'BS', 'Bonus')], default=b'TP', max_length=13)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Paused (Exception)', 'Paused (Exception)'), ('Paused (Recycle)', 'Paused (Recycle)'), ('Processed', 'Processed'), ('Processed Bonus', 'Processed Bonus'), ('Partial', 'Partial'), ('Cancelled', 'Cancelled'), ('Blocked', 'Blocked'), ('Timeout', 'Timeout')], default='Pending', max_length=15)),
                ('channel', models.CharField(choices=[('Admin', 'Admin'), ('Auto Recycle', 'Auto Recycle'), ('User', 'User'), ('Manual', 'Manual')], default='Manual', max_length=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('fulfilled', models.DateTimeField(blank=True, default=None, null=True)),
                ('commitment_matched', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_bonus', models.BooleanField(default=False, verbose_name='Bonus')),
                ('is_active', models.BooleanField(default=True)),
                ('is_committed', models.BooleanField(default=False, verbose_name='Committed')),
                ('is_ghed', models.BooleanField(default=False, verbose_name='GHed')),
                ('is_auto_recycle', models.BooleanField(default=False, verbose_name='Can Recycle')),
                ('is_recycled', models.BooleanField(default=False, verbose_name='Recycled')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
            ],
            options={
                'ordering': ('-created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('other_names', models.CharField(blank=True, max_length=32, null=True)),
                ('address', models.CharField(blank=True, default=None, max_length=128, null=True, verbose_name='City')),
                ('dob', models.DateField(blank=True, null=True)),
                ('min_ph', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('max_ph', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('min_ph_btc', models.DecimalField(decimal_places=12, default=0, max_digits=15)),
                ('max_ph_btc', models.DecimalField(decimal_places=12, default=0, max_digits=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Blocked', 'Blocked'), ('Suspended', 'Suspended'), ('Paused', 'Paused'), ('Not Verified', 'Not Verified')], default='Not Verified', max_length=14)),
                ('delete_on', models.DateTimeField(blank=True, default=None, null=True)),
                ('gh_balance', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('frozen_balance', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('released_balance', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('coin_account_balance', models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ('gh_balance_btc', models.DecimalField(decimal_places=12, default=0, max_digits=15)),
                ('frozen_balance_btc', models.DecimalField(decimal_places=12, default=0, max_digits=15)),
                ('released_balance_btc', models.DecimalField(decimal_places=12, default=0, max_digits=15)),
                ('coin_account_balance_btc', models.DecimalField(decimal_places=12, default=0, max_digits=15)),
                ('is_bonus', models.BooleanField(default=False, verbose_name='Bonus')),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('is_fake', models.BooleanField(default=False, verbose_name='Fake')),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('can_receive_sms', models.BooleanField(default=True)),
                ('can_receive_email', models.BooleanField(default=True)),
                ('token', models.CharField(max_length=16)),
                ('code', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('bank_accounts', models.ManyToManyField(blank=True, default=None, to='core.BankAccount')),
                ('country', models.ForeignKey(default='ng', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Country')),
                ('sponsor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member')),
            ],
            options={
                'ordering': ('-created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=128)),
                ('phone', models.CharField(max_length=15)),
                ('type', models.CharField(choices=[('GH Matched', 'GH Matched'), ('PH Matched', 'PH Matched'), ('Verification', 'Verification'), ('POP Confirmed', 'POP Confirmed'), ('POP Exception', 'POP Exception'), ('Payment Made', 'Payment Made'), ('Custom', 'Custom')], max_length=13)),
                ('counter', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('sent_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('name', models.CharField(max_length=32)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Disabled', 'Disabled'), ('Coming Soon', 'Coming Soon')], default='Active', max_length=11)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
            ],
            options={
                'ordering': ('amount',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PackageConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('coin', models.DecimalField(decimal_places=2, max_digits=8)),
                ('min_ph', models.DecimalField(decimal_places=12, default=0, max_digits=20)),
                ('max_ph', models.DecimalField(decimal_places=12, default=0, max_digits=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
            ],
            options={
                'ordering': ('currency', 'coin'),
                'db_table': 'core_package_config',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harsh', models.CharField(max_length=128)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'core_auth_password_history',
            },
        ),
        migrations.CreateModel(
            name='POPPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=core.models.generic_path_and_rename)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.CharField(max_length=32, verbose_name='object_id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'POP',
                'db_table': 'core_pop_picture',
                'managed': True,
                'verbose_name_plural': 'POPs',
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=32, verbose_name='object_id')),
                ('message', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('Resolved', 'Resolved'), ('Not Resolved', 'Not Resolved')], default='Not Resolved', max_length=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ('-created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ResponseCode',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('alias', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'ordering': ('id',),
                'db_table': 'core_response_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SchedulerReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Matched', 'Matched'), ('Exception', 'Exception')], max_length=10)),
                ('count', models.IntegerField(default=0)),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True, default=None, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
            ],
            options={
                'db_table': 'core_scheduler_report',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('capital', models.CharField(max_length=64)),
                ('appelation', models.CharField(max_length=64)),
                ('country', models.ForeignKey(db_column='country', default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Country')),
            ],
            options={
                'ordering': ('name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Testimony',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('vidoe_url', models.URLField(blank=True, default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TestimonyCode',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('object_id', models.CharField(max_length=40)),
                ('type', models.CharField(choices=[('PH', 'PH'), ('GH', 'GH')], default=None, max_length=13)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmed_on', models.DateTimeField(blank=True, default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('confirmed_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confirmed_by', to='core.Member')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
                ('testifier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member')),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'core_testimony_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TestimonyUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=core.models.path_and_rename_chat_files)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('testimony', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Chat')),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'core_testimony_upload',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=20)),
                ('note', models.CharField(max_length=128)),
                ('change', models.CharField(choices=[('Insert', 'Insert'), ('Delete', 'Delete'), ('Update', 'Update'), ('Processing', 'Processing')], max_length=10)),
                ('updater', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('type', models.CharField(choices=[('Withdrawal', 'Withdrawal'), ('Coin', 'Coin')], default='Withdrawal', max_length=11)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Paused (Exception)', 'Paused (Exception)'), ('Paused (Recycle)', 'Paused (Recycle)'), ('Processing', 'Processing'), ('Incomplete', 'Incomplete'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=21)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_bonus', models.BooleanField(default=False)),
                ('balance', models.DecimalField(decimal_places=12, max_digits=19)),
                ('fulfilled', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('can_match', models.BooleanField(default=True, verbose_name='Can Match')),
                ('bank_account', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.BankAccount')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
                ('currency_src', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='original_currency', to='core.Currency')),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member')),
                ('prerequisite', models.ManyToManyField(blank=True, default=None, to='core.Account')),
                ('testimony_code', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.TestimonyCode')),
            ],
            options={
                'ordering': ('-created',),
                'verbose_name': 'Queued Transaction',
                'managed': True,
                'verbose_name_plural': 'Queued Transactions',
            },
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('status', models.CharField(choices=[('Awaiting Payment', 'Awaiting Payment'), ('Paused (Exception)', 'Paused (Exception)'), ('Paused (Recycle)', 'Paused (Recycle)'), ('Awaiting Confirmation', 'Awaiting Confirmation'), ('Exception', 'Exception'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Awaiting Payment', max_length=21)),
                ('proof_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('proof_acknowledge_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('rematched', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes'), ('Cancelled', 'Cancelled')], default='No', max_length=9)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expires', models.DateTimeField(blank=True, default=None, null=True)),
                ('account', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Account')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency')),
                ('sender', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member')),
                ('testimony_code', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.TestimonyCode')),
                ('transaction', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Transaction')),
            ],
            options={
                'verbose_name': 'Matched Transaction',
                'db_table': 'core_transaction_detail',
                'managed': True,
                'verbose_name_plural': 'Matched Transactions',
            },
        ),
        migrations.CreateModel(
            name='TransactionDetailPointer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('trans_detail', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.TransactionDetail')),
            ],
            options={
                'ordering': ('-created',),
                'db_table': 'core_transaction_detail_pointer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TransactionPointer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=12, max_digits=19)),
                ('is_full', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Account')),
                ('transaction', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Transaction')),
            ],
            options={
                'managed': True,
                'ordering': ('-created',),
                'verbose_name_plural': 'Queue Pointers',
                'db_table': 'core_transaction_pointer',
                'verbose_name': 'Queue Pointer',
            },
        ),
        migrations.CreateModel(
            name='TransactionSkippedReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('Matched', 'Matched'), ('Not Matched', 'Not Matched')], default='Not Matched', max_length=15)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Transaction')),
            ],
            options={
                'ordering': ('-created',),
                'db_table': 'core_transaction_skipped_reason',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='transactiondetailpointer',
            name='trans_pointer',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.TransactionPointer'),
        ),
        migrations.AddField(
            model_name='testimony',
            name='transaction',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Transaction'),
        ),
        migrations.AddField(
            model_name='message',
            name='response_code',
            field=models.ForeignKey(blank=True, db_column='response_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.ResponseCode'),
        ),
        migrations.AddField(
            model_name='member',
            name='state',
            field=models.ForeignKey(default=10, on_delete=django.db.models.deletion.DO_NOTHING, to='core.State'),
        ),
        migrations.AddField(
            model_name='member',
            name='user',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='donation',
            name='member',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member'),
        ),
        migrations.AddField(
            model_name='donation',
            name='recommitment',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Donation'),
        ),
        migrations.AddField(
            model_name='config',
            name='country',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Country'),
        ),
        migrations.AddField(
            model_name='chathead',
            name='trans_detail',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.TransactionDetail'),
        ),
        migrations.AddField(
            model_name='chat',
            name='chat_head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.ChatHead'),
        ),
        migrations.AddField(
            model_name='chat',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bankaccountverification',
            name='member',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency'),
        ),
        migrations.AddField(
            model_name='bank',
            name='country',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Country'),
        ),
        migrations.AddField(
            model_name='account',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Currency'),
        ),
        migrations.AddField(
            model_name='account',
            name='donation',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Donation'),
        ),
        migrations.AddField(
            model_name='account',
            name='owner',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Member'),
        ),
        migrations.AddField(
            model_name='account',
            name='testimony_code',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.TestimonyCode'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login_signature',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signatures', related_query_name='signature', to='core.AuthAudit'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='packageconfig',
            unique_together=set([('currency', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='config',
            unique_together=set([('code', 'country')]),
        ),
    ]
